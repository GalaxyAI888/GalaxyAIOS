"""Add App Management tables

Revision ID: add_app_management_tables
Revises: 681896eec5fc
Create Date: 2025-01-21 14:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import aistack


# revision identifiers, used by Alembic.
revision: str = 'add_app_management_tables'
down_revision: Union[str, None] = '681896eec5fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apps',
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('app_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dockerfile_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('container_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ports', sa.JSON(), nullable=True),
    sa.Column('environment', sa.JSON(), nullable=True),
    sa.Column('volumes', sa.JSON(), nullable=True),
    sa.Column('urls', sa.JSON(), nullable=True),
    sa.Column('memory_limit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cpu_limit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_preset', sa.Boolean(), nullable=False),
    sa.Column('build_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('build_message', sa.Text(), nullable=True),
    sa.Column('build_started_at', sa.DateTime(), nullable=True),
    sa.Column('build_finished_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_apps_name'), 'apps', ['name'], unique=False)
    
    op.create_table('app_instances',
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.Column('memory_usage', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('exposed_ports', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['apps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('app_instances')
    op.drop_index(op.f('ix_apps_name'), table_name='apps')
    op.drop_table('apps')
    # ### end Alembic commands ### 